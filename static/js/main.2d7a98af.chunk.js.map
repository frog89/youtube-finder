{"version":3,"sources":["components/SearchInputView.js","components/ResultItemView.js","components/SearchResultView.js","components/YoutubeSearch.js","components/App.js","index.js"],"names":["SearchInputView","state","searchText","onFormSubmit","event","preventDefault","props","onSearchTextChange","onSubmit","this","htmlFor","type","id","onChange","setState","target","value","React","Component","ResultItemView","url","videoId","className","title","src","frameBorder","allow","allowFullScreen","SearchResultView","videosJsx","videoIds","map","k","key","YoutubeSearch","resultCount","onSearchSuccess","onSearchError","window","gapi","client","youtube","search","list","part","maxResults","q","then","response","result","items","item","firstError","error","errors","message","authenticate","loadClient","executeSearch","App","searchError","text","length","style","color","ReactDOM","render","document","getElementById"],"mappings":"6MA4BeA,E,4MAzBbC,MAAQ,CACNC,WAAY,I,EAGdC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,MAAMC,mBAAmB,EAAKN,MAAMC,a,uDAGjC,IAAD,OACP,OACE,6BACE,0BAAMM,SAAUC,KAAKN,cACnB,2BAAOO,QAAQ,eAAf,+BACA,2BAAOC,KAAK,OAAOC,GAAG,cACpBC,SAAU,SAACT,GAAD,OAAW,EAAKU,SAAS,CAACZ,WAAYE,EAAMW,OAAOC,SAC7DA,MAAOP,KAAKR,MAAMC,aACpB,2CAEF,kC,GApBsBe,IAAMC,WCcrBC,E,uKAZX,IAAMC,EAAG,wCAAoCX,KAAKH,MAAMe,SACxD,OACE,4BAAQC,UAAU,OAAOC,MAAOd,KAAKH,MAAMe,QACzCG,IAAKJ,EACLK,YAAY,IACZC,MAAM,0EACNC,iBAAe,Q,GARMV,IAAMC,WCoBpBU,G,6KAhBX,IAAMC,EAAYpB,KAAKH,MAAMwB,SAASC,KAAI,SAACV,EAASW,GAClD,OACE,kBAAC,EAAD,CAAgBC,IAAKD,EAAGX,QAASA,OAGrC,OACE,6BACE,0BAAMT,GAAG,QAAQU,UAAU,aACxBO,Q,GAVoBZ,IAAMC,YC8BtBgB,E,sGAzBChC,EAAYiC,EAAaC,EAAiBC,GACtDC,OAAOC,KAAKC,OAAOC,QAAQC,OAAOC,KAAK,CACrCC,KAAM,UAENC,WAAYV,EACZW,EAAG5C,IAEJ6C,MAAK,SAACC,GACL,IAAIlB,EAAWkB,EAASC,OAAOC,MAAMnB,KAAI,SAACoB,GAAD,OAAUA,EAAKvC,GAAGS,WAC3De,EAAgBN,MACf,SAACkB,GACF,IAAII,EAAaJ,EAASC,OAAOI,MAAMC,OAAO,GAAGC,QACjDlB,EAAce,Q,6BAIXlD,EAAYiC,EAAaC,EAAiBC,GAAgB,IAAD,OAC9DC,OAAOkB,eACJT,KAAKT,OAAOmB,YACZV,MAAK,WACJ,EAAKW,cAAcxD,EAAYiC,EAAaC,EAAiBC,U,KCctDsB,E,4MArCb1D,MAAQ,CACNC,WAAY,GACZ4B,SAAU,GACV8B,YAAa,I,EAGfxB,gBAAkB,SAACN,GACjB,EAAKhB,SAAS,CAAEgB,c,EAGlBO,cAAgB,SAACe,GACf,EAAKtC,SAAS,CAAE8C,YAAaR,K,EAG/B7C,mBAAqB,SAACsD,GACpB,EAAK/C,SAAS,CAACZ,WAAY2D,KACnB,IAAI3B,GACVQ,OAAOmB,EAAM,GAAI,EAAKzB,gBAAiB,EAAKC,gB,uDAI9C,OACE,6BACE,gCACE,2CACA,kBAAC,EAAD,CAAiB9B,mBAAoBE,KAAKF,qBAExCE,KAAKR,MAAM2D,YAAYE,OAAS,EAChC,yBAAKC,MAAO,CAACC,MAAO,QAASvD,KAAKR,MAAM2D,aACxC,kBAAC,EAAD,CAAkB9B,SAAUrB,KAAKR,MAAM6B,iB,GA9BjCb,IAAMC,WCDxB+C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2d7a98af.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchInputView extends React.Component {\r\n  state = {\r\n    searchText: ''\r\n  }\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSearchTextChange(this.state.searchText);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onFormSubmit}>\r\n          <label htmlFor=\"searchInput\">Search your favorite artist</label>\r\n          <input type=\"text\" id=\"searchInput\" \r\n            onChange={(event) => this.setState({searchText: event.target.value})}\r\n            value={this.state.searchText} />\r\n          <button>Search</button>\r\n        </form>\r\n        <hr/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchInputView;","import React from 'react';\r\n\r\nclass ResultItemView extends React.Component {\r\n  render() {\r\n    const url = `https://www.youtube.com/embed/${this.props.videoId}`;\r\n    return (\r\n      <iframe className=\"item\" title={this.props.videoId}\r\n        src={url}\r\n        frameBorder=\"0\" \r\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n        allowFullScreen\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ResultItemView;","import React from 'react';\r\nimport ResultItemView from './ResultItemView';\r\nimport './SearchResultView.css';\r\n\r\nclass SearchResultView extends React.Component {\r\n  render() {\r\n    const videosJsx = this.props.videoIds.map((videoId, k) => {\r\n      return (\r\n        <ResultItemView key={k} videoId={videoId} />\r\n      )\r\n    });\r\n    return (\r\n      <div>\r\n        <main id=\"songs\" className=\"container\">\r\n          {videosJsx}\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SearchResultView;","//import React from 'react';\r\n\r\nclass YoutubeSearch {\r\n  // Get Channel ID for user:\r\n  // https://www.googleapis.com/youtube/v3/channels?part=snippet&forUsername={0}&key={1}\r\n  // E.g. for Arcade: forUsername='HaatoSK' => ChannelId='UC7vJeI9yNkLec9s_3b9Pnew'\r\n\r\n  // Search videos API description:\r\n  // See https://developers.google.com/youtube/v3/docs/search/list?apix=true\r\n  executeSearch(searchText, resultCount, onSearchSuccess, onSearchError) {\r\n    window.gapi.client.youtube.search.list({\r\n      part: \"snippet\",\r\n      //channelId: 'UC7vJeI9yNkLec9s_3b9Pnew',\r\n      maxResults: resultCount,\r\n      q: searchText\r\n    })\r\n    .then((response) => {\r\n      let videoIds = response.result.items.map((item) => item.id.videoId);\r\n      onSearchSuccess(videoIds);\r\n    }, (response) => {\r\n      let firstError = response.result.error.errors[0].message;\r\n      onSearchError(firstError);\r\n    });\r\n  }\r\n\r\n  search(searchText, resultCount, onSearchSuccess, onSearchError) {\r\n    window.authenticate()\r\n      .then(window.loadClient)\r\n      .then(() => {\r\n        this.executeSearch(searchText, resultCount, onSearchSuccess, onSearchError)\r\n      });\r\n  }    \r\n}\r\n\r\nexport default YoutubeSearch;\r\n","import React from 'react'\r\nimport SearchInputView from './SearchInputView';\r\nimport SearchResultView from './SearchResultView';\r\nimport YoutubeSearch from './YoutubeSearch';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    searchText: '',\r\n    videoIds: [],\r\n    searchError: ''\r\n  }\r\n\r\n  onSearchSuccess = (videoIds) => {\r\n    this.setState({ videoIds });\r\n  }\r\n\r\n  onSearchError = (firstError) => {\r\n    this.setState({ searchError: firstError });\r\n  }\r\n\r\n  onSearchTextChange = (text) => {\r\n    this.setState({searchText: text});\r\n    let s = new YoutubeSearch();\r\n    s.search(text, 10, this.onSearchSuccess, this.onSearchError);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>Song Finder</h1>\r\n          <SearchInputView onSearchTextChange={this.onSearchTextChange}/>\r\n          {\r\n            this.state.searchError.length > 0 ? \r\n            <div style={{color: 'red'}}>{this.state.searchError}</div> :\r\n            <SearchResultView videoIds={this.state.videoIds} />\r\n          }\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}